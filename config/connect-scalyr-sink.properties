name=scalyr-sink
connector.class=com.scalyr.integrations.kafka.ScalyrSinkConnector
tasks.max=3
topics=logs

# Set to false if Kafka message value does not have schema
value.converter.schemas.enable=false

# Scalyr server config
# Defaults to `https://app.scalyr.com` and can be omited.  For EU, this should be set to `https://upload.eu.scalyr.com`
scalyr_server=https://app.scalyr.com

# Scalyr Write API key
api_key=<log write api key from https://app.scalyr.com/keys>

# Optional enrichment attributes in key=value format which are added to the Scalyr event attributes
#event_enrichment=key1=value1,key2=value2

# Custom application event mapping - only needed for custom applications
#custom_app_event_mapping=[{"matcher": {"attribute": "app.name", "value": "myapp"}, "eventMapping": {"message": "message", "logfile": "log.path", "serverHost": "host.hostname", "parser": "fields.parser", "version": "app.version", "appField1", "appField1", "appField2", "nested.appField2"}}]

# Advanced configuration options - these should not be modified in most cases
# Compression type to use for sending log events.  Valid values are: `deflate`, `none`.
#compression_type=deflate

# Timeout in milliseconds for Scalyr add events call.
#add_events_timeout_ms=20000

# Delay in milliseconds for initial add events retry.  This delay is increased exponentially for each retry.
#add_events_retry_delay_ms=500

# Batch size that must be reached before events are sent.  This is to buffer events into larger batches for increased throughput.
#batch_send_size_bytes=4000000

#Maximum time to wait in millisecs between batch sends.  This ensures events are sent to Scalyr in a timely manner on systems under light load where `batch_send_size_bytes` may not be reached for longer periods of time.
#batch_send_wait_ms=5000
